#include <iostream>  // C++ 입출력을 위한 헤더 파일
#include <chrono>    // 시간 측정을 위한 헤더 파일
#include <conio.h>   // _kbhit() 및 _getch() 함수를 사용하기 위한 헤더 파일
#include <string>    // 문자열을 다루기 위한 헤더 파일

using namespace std;

// 기술 목록 및 해당 메시지 배열
const pair<string, string> techniques[] = {
    {"↓→a", "아도겐! =o"},
    {"→↓→f", "뻐큐! ( -_-)-ㅗ"},
    {"→↑→s", "스트레이트 ( 0_0)-@"}
};

int main() {
    chrono::system_clock::time_point start;  // 시작 시간을 저장하는 변수
    chrono::duration<double> sec;            // 경과 시간을 저장하는 변수
    bool checkTime = false;                  // 시간 체크 상태를 나타내는 플래그
    string inputBuffer = "";                 // 사용자의 입력을 저장하는 버퍼

    while (true) {
        char c;

        // 사용자가 키를 누르면
        if (_kbhit()) {
            if (checkTime == false) {
                checkTime = true;
                start = chrono::system_clock::now();  // 경과 시간 측정 시작 시간 설정
            }
            c = _getch();
            // ESC 키 (ASCII 코드 27)를 누르면 프로그램 종료
            if (c == 27) {
                exit(1);
            }
        }

        if (checkTime) {
            sec = chrono::system_clock::now() - start;  // 경과 시간 계산
        }

        start = chrono::system_clock::now();  // 경과 시간 초기화

        sec = chrono::system_clock::now() - start;  // 경과 시간 다시 계산 (중복 코드)

        // 0.3초 이상 경과한 경우
        if (sec.count() >= 0.3) {
            // 등록된 기술 목록을 검사
            for (const auto& technique : techniques) {
                // 사용자 입력 버퍼에서 기술을 찾으면 해당 메시지 출력
                if (inputBuffer.find(technique.first) != string::npos) {
                    cout << technique.second << endl;
                    inputBuffer.clear();  // 입력 버퍼 초기화
                    break;
                }
            }
            inputBuffer.clear();  // 입력 버퍼 초기화
            checkTime = false;   // 시간 체크 종료
        }

        // 사용자가 키를 누르면 입력 버퍼에 추가
        if (_kbhit()) {
            c = _getch();
            inputBuffer += c;
        }
    }

    return 0;
}
